version: '3'

includes:
  tools:
    taskfile: tools.yaml
    internal: true
  lint: 
    taskfile: lint.yaml
    internal: true

vars:
  CONTAINER_TOOL: '{{.CONTAINER_TOOL | default "docker"}}'
  BUILDER_NAME: "project-v3-builder"
  IMG: '{{.IMG | default "jaceroio/kode-operator:v0.0.0-latest"}}'

tasks:
  manifests:
    desc: Generate WebhookConfiguration, ClusterRole and CustomResourceDefinition objects
    cmds:
      - '{{.CONTROLLER_GEN_CMD}} rbac:roleName=manager-role crd webhook paths="{{.ROOT_DIR}}/..." output:crd:artifacts:config={{.ROOT_DIR}}/config/crd/bases'
      - echo "Manifests generated successfully"
    sources:
      - '{{.ROOT_DIR}}/api/**/*.go'
      - '{{.ROOT_DIR}}/controllers/**/*.go'
      - '{{.ROOT_DIR}}/config/rbac/**/*.yaml'
    generates:
      - '{{.ROOT_DIR}}/config/crd/bases/*.yaml'
      - '{{.ROOT_DIR}}/config/rbac/role.yaml'
    deps:
      - tools:controller-gen
    silent: true

  generate:
    desc: |
      Generate code containing DeepCopy, DeepCopyInto, and DeepCopyObject method implementations.
      This task is crucial for ensuring that Kubernetes custom resources can be properly serialized and deserialized.
      
      Usage:
        task generate
      
      Output:
        Generated code will be integrated into the existing codebase.
    cmds:
      - '{{.CONTROLLER_GEN_CMD}} object:headerFile="{{.ROOT_DIR}}/hack/boilerplate.go.txt" paths="{{.ROOT_DIR}}/..."'
      - echo "Files generated successfully"
    deps:
      - tools:controller-gen
    silent: true

  lint:
    desc: Run linters
    cmds:
      - task: lint:fmt
      - task: lint:vet

  build-binary:
    desc: Build manager binary
    cmds:
      - go build -o {{.ROOT_DIR}}/bin/manager {{.ROOT_DIR}}/cmd/main.go
      - echo "Manager binary built successfully"
    sources:
      - '{{.ROOT_DIR}}/cmd/**/*.go'
      - '{{.ROOT_DIR}}/api/**/*.go'
      - '{{.ROOT_DIR}}/internal/**/*.go'
      - '{{.ROOT_DIR}}/pkg/**/*.go'
    generates:
      - '{{.ROOT_DIR}}/bin/manager'
    deps:
      - manifests
      - generate
    silent: true

  build-installer:
    desc: Generate a consolidated YAML with CRDs and deployment manifests
    deps:
      - tools:ensure-dir
      - manifests
      - generate
      - tools:kustomize
    cmds:
      - '{{.KUSTOMIZE_CMD}} build {{.ROOT_DIR}}/config/installer > {{.ROOT_DIR}}/dist/install.yaml'
      - echo "Installer generated successfully"
    silent: true

  docker-build-base:
    internal: true
    cmds:
      - |
        if ! {{.CONTAINER_TOOL}} buildx inspect {{.BUILDER_NAME}} > /dev/null 2>&1; then
          {{.CONTAINER_TOOL}} buildx create --name {{.BUILDER_NAME}} --use
        else
          {{.CONTAINER_TOOL}} buildx use {{.BUILDER_NAME}}
        fi
      - |
        BUILD_ARGS="--tag {{.IMG}} {{.EXTRA_BUILD_ARGS}}"
        if [ "{{.PUSH}}" = "true" ]; then
          echo "Building and pushing {{.BUILD_TYPE}} image..."
          {{.CONTAINER_TOOL}} buildx build $BUILD_ARGS --push {{.ROOT_DIR}}/.
        else
          echo "Building {{.BUILD_TYPE}} image without pushing..."
          {{.CONTAINER_TOOL}} buildx build $BUILD_ARGS --load {{.ROOT_DIR}}/.
        fi
    vars:
      PUSH: '{{.PUSH | default "false"}}'
      EXTRA_BUILD_ARGS: ''
      BUILD_TYPE: 'docker'

  docker-build:
    desc: Build docker image locally
    cmds:
      - task: docker-build-base
        vars:
          BUILD_TYPE: 'amd64'
          PUSH: '{{.PUSH | default "true"}}'
    sources:
      - '{{.ROOT_DIR}}/Dockerfile'
    generates:
      - '{{.IMG}}'

  docker-build-multi:
    desc: Build docker image for the manager with cross-platform support
    cmds:
      - task: docker-build-base
        vars:
          BUILD_TYPE: 'multi-platform'
          EXTRA_BUILD_ARGS: '--platform={{.PLATFORMS}}'
    vars:
      PLATFORMS: '{{.PLATFORMS | default "linux/amd64,linux/arm64"}}'

  package-crds:
    desc: Combine all CRDs into a single file
    deps:
      - manifests
    cmds:
      - |
        echo "---" > {{.ROOT_DIR}}/kode-crds.yaml
        for file in {{.ROOT_DIR}}/config/crd/bases/*.yaml; do
          echo "---" >> {{.ROOT_DIR}}/kode-crds.yaml
          cat $file >> {{.ROOT_DIR}}/kode-crds.yaml
        done
    generates:
      - '{{.ROOT_DIR}}/kode-crds.yaml'
