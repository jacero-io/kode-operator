version: '3'

includes:
  tools: ./.tasks/tools.yaml
  lint: ./.tasks/lint.yaml
  test: ./.tasks/test.yaml
  cluster: ./.tasks/clusters.yaml
  helm: ./.tasks/helm.yaml
  build: ./.tasks/build.yaml
  dev: ./.tasks/dev.yaml
  samples: ./.tasks/samples.yaml

vars:
  GOBIN:
    sh: echo "${GOBIN:-$(go env GOPATH)/bin}"
  CONTAINER_TOOL: docker
  PLATFORMS: linux/arm64,linux/amd64,linux/s390x,linux/ppc64le
  LOCALBIN: '{{.ROOT_DIR}}/bin'
  ENVTEST_K8S_VERSION: 1.30.0
  GO_VERSION: '1.22'
  KUSTOMIZE_VERSION: v5.4.2
  CONTROLLER_TOOLS_VERSION: v0.16.0
  ENVTEST_VERSION: release-0.18
  GOLANGCI_LINT_VERSION: v1.57.2
  HELMIFY_VERSION: v0.4.13
  KUBECTL: kubectl
  KUSTOMIZE_CMD: '{{.LOCALBIN}}/kustomize-{{.KUSTOMIZE_VERSION}}'
  CONTROLLER_GEN_CMD: '{{.LOCALBIN}}/controller-gen-{{.CONTROLLER_TOOLS_VERSION}}'
  SETUP_ENVTEST_CMD: '{{.LOCALBIN}}/setup-envtest-{{.ENVTEST_VERSION}}'
  GOLANGCI_LINT_CMD: '{{.LOCALBIN}}/golangci-lint-{{.GOLANGCI_LINT_VERSION}}'
  HELMIFY_CMD: '{{.LOCALBIN}}/helmify-{{.HELMIFY_VERSION}}'

  TEST_VERBOSITY: -v
  ENV: development
  LOG_LEVEL: info

  IGNORE_NOT_FOUND: '{{.IGNORE_NOT_FOUND | default "false"}}'
  USE_KIND_CONTEXT: '{{.USE_KIND_CONTEXT | default "true"}}'
  KIND_KUBECONFIG: '{{.KIND_KUBECONFIG | default "${HOME}/.kube/kind-config-test"}}'
  KIND_CLUSTER_NAME: '{{.KIND_CLUSTER_NAME | default "test"}}'
  KIND_CONTEXT: '{{ .KIND_CONTEXT | default "kind-test" }}'
  IMG: '{{.IMG | default "emiljacero/kode-operator:v0.0.0-latest"}}'

tasks:
  default:
    cmds:
      - task: list
  
  list:
    desc: Display all available tasks
    cmds:
      - task --list

  set-context:
    internal: true
    cmds:
      - |
        if [ "{{.USE_KIND_CONTEXT}}" = "true" ]; then
          echo "Using Kind context..."
          kubectl config use-context {{.KIND_CONTEXT}}
        else
          echo "Using existing kubecontext..."
        fi

  fmt:
    desc: Run go fmt
    cmds:
      - task: lint:fmt

  concat:
    desc: Concatenate all files in the specified directory and output to concatenated_output.txt. Usage - task concat -- /path/to/directory
    vars:
      OUTPUT_FILE: concatenated_output.txt
    cmds:
      - |
        if [ -z "{{.CLI_ARGS}}" ]; then
          echo "Error: No directory path provided."
          echo "Usage: task concat -- /path/to/directory"
          exit 1
        fi
      - bash {{.TASKFILE_DIR}}/.tasks/concat.sh {{.CLI_ARGS}} {{.OUTPUT_FILE}}
    generates:
      - '{{.OUTPUT_FILE}}'
    silent: false
