apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: entrypoints.kode.jacero.io
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  labels:
  {{- include "kode-crd.labels" . | nindent 4 }}
spec:
  group: kode.jacero.io
  names:
    kind: EntryPoint
    listKind: EntryPointList
    plural: entrypoints
    singular: entrypoint
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: EntryPoint is the Schema for the entrypoints API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: EntryPointSpec defines the desired state of EntryPoint
            properties:
              apiType:
                description: Type is the type of the gateway. It could be ingress-api
                  or gateway-api.
                enum:
                - ingress-api
                - gateway-api
                type: string
              type:
                description: Type is the way the Kode resource is accessed. It could
                  be subdomain or path.
                enum:
                - domain
                - path
                type: string
              url:
                description: |-
                  URL is the domain name to use either as a suffix in the case of Type=domain or as a prefix/domain in the case of Type=path.
                  When the type is domain, the controller will try to publish the Kode resource as a subdomain of the given domain (e.g <kode-resource>.kode.example.com).
                  When the type is path, the controller will try to publish the Kode resource as a path of the given URL (e.g kode.example.com/<kode-resource>).
                type: string
            required:
            - apiType
            - type
            - url
            type: object
          status:
            description: EntryPointStatus defines the observed state of EntryPoint
            properties:
              conditions:
                description: Conditions represent the latest available observations
                  of a Kode's state.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,\n\n\n\ttype
                    FooStatus struct{\n\t    // Represents the observations of a foo's
                    current state.\n\t    // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\"\n\t    // +patchMergeKey=type\n\t
                    \   // +patchStrategy=merge\n\t    // +listType=map\n\t    // +listMapKey=type\n\t
                    \   Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              lastError:
                description: LastError contains the last error message encountered during
                  reconciliation.
                type: string
              lastErrorTime:
                description: LastErrorTime is the timestamp when the last error occurred.
                format: date-time
                type: string
              phase:
                description: Phase represents the current phase of the Kode resource.
                type: string
            required:
            - phase
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []