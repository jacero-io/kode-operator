apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: entrypoints.kode.jacero.io
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.0
  labels:
  {{- include "kode-crd.labels" . | nindent 4 }}
spec:
  group: kode.jacero.io
  names:
    kind: EntryPoint
    listKind: EntryPointList
    plural: entrypoints
    singular: entrypoint
  scope: Namespaced
  versions:
  - name: v1alpha2
    schema:
      openAPIV3Schema:
        description: EntryPoint is the Schema for the entrypoints API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: EntryPointSpec defines the desired state of EntryPoint
            properties:
              authSpec:
                description: AuthSpec defines the AuthSpec for the EntryPoint. Use this
                  to influence the authentication and authorization policies of the
                  EntryPoint.
                properties:
                  authType:
                    allOf:
                    - enum:
                      - none
                      - basicAuth
                      - jwt
                      - oidc
                      - extAuth
                    - enum:
                      - none
                      - basicAuth
                      - jwt
                      - oidc
                      - extAuth
                    default: none
                    description: 'The Envoy Gateway SecurityPolicy to use for the authentication.
                      Can be either "none", "basicAuth", "jwt", "oidc", "extAuth" or
                      "authorization". Reference: https://gateway.envoyproxy.io/contributions/design/security-policy/'
                    type: string
                  identityReference:
                    description: Reference to a field in the JWT token of OIDC or JWT.
                      It will influence the controller on how to route the request and
                      authorize the user.
                    type: string
                  securityPolicySpec:
                    description: 'Defines the SecurityPolicies to be applied to the
                      Route. Reference: https://gateway.envoyproxy.io/contributions/design/security-policy/'
                    properties:
                      basicAuth:
                        description: |-
                          BasicAuth defines the configuration for the HTTP Basic Authentication. Points to a Kubernetes secret which contains the username-password pairs in htpasswd format.
                          Reference to https://httpd.apache.org/docs/2.4/programs/htpasswd.html for more details.
                        properties:
                          users:
                            description: |-
                              The Kubernetes secret which contains the username-password pairs in
                              htpasswd format, used to verify user credentials in the "Authorization"
                              header.
  
                              This is an Opaque secret. The username-password pairs should be stored in
                              the key ".htpasswd". As the key name indicates, the value needs to be the
                              htpasswd format, for example: "user1:{SHA}hashed_user1_password".
                              Right now, only SHA hash algorithm is supported.
                              Reference to https://httpd.apache.org/docs/2.4/programs/htpasswd.html
                              for more details.
  
                              Note: The secret must be in the same namespace as the SecurityPolicy.
                            properties:
                              group:
                                default: ""
                                description: |-
                                  Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                  When unspecified or empty string, core API group is inferred.
                                maxLength: 253
                                pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                              kind:
                                default: Secret
                                description: Kind is kind of the referent. For example
                                  "Secret".
                                maxLength: 63
                                minLength: 1
                                pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                type: string
                              name:
                                description: Name is the name of the referent.
                                maxLength: 253
                                minLength: 1
                                type: string
                              namespace:
                                description: |-
                                  Namespace is the namespace of the referenced object. When unspecified, the local
                                  namespace is inferred.
  
                                  Note that when a namespace different than the local namespace is specified,
                                  a ReferenceGrant object is required in the referent namespace to allow that
                                  namespace's owner to accept the reference. See the ReferenceGrant
                                  documentation for details.
  
                                  Support: Core
                                maxLength: 63
                                minLength: 1
                                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                type: string
                            required:
                            - name
                            type: object
                        required:
                        - users
                        type: object
                      extAuth:
                        description: ExtAuth defines the configuration for External
                          Authorization.
                        properties:
                          failOpen:
                            default: false
                            description: |-
                              FailOpen is a switch used to control the behavior when a response from the External Authorization service cannot be obtained.
                              If FailOpen is set to true, the system allows the traffic to pass through.
                              Otherwise, if it is set to false or not set (defaulting to false),
                              the system blocks the traffic and returns a HTTP 5xx error, reflecting a fail-closed approach.
                              This setting determines whether to prioritize accessibility over strict security in case of authorization service failure.
                            type: boolean
                          grpc:
                            description: |-
                              GRPC defines the gRPC External Authorization service.
                              Either GRPCService or HTTPService must be specified,
                              and only one of them can be provided.
                            properties:
                              backendRef:
                                description: |-
                                  BackendRef references a Kubernetes object that represents the
                                  backend server to which the authorization request will be sent.
                                  Only Service kind is supported for now.
  
                                  Deprecated: Use BackendRefs instead.
                                properties:
                                  group:
                                    default: ""
                                    description: |-
                                      Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                      When unspecified or empty string, core API group is inferred.
                                    maxLength: 253
                                    pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                    type: string
                                  kind:
                                    default: Service
                                    description: |-
                                      Kind is the Kubernetes resource kind of the referent. For example
                                      "Service".
  
                                      Defaults to "Service" when not specified.
  
                                      ExternalName services can refer to CNAME DNS records that may live
                                      outside of the cluster and as such are difficult to reason about in
                                      terms of conformance. They also may not be safe to forward to (see
                                      CVE-2021-25740 for more information). Implementations SHOULD NOT
                                      support ExternalName Services.
  
                                      Support: Core (Services with a type other than ExternalName)
  
                                      Support: Implementation-specific (Services with type ExternalName)
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                    type: string
                                  name:
                                    description: Name is the name of the referent.
                                    maxLength: 253
                                    minLength: 1
                                    type: string
                                  namespace:
                                    description: |-
                                      Namespace is the namespace of the backend. When unspecified, the local
                                      namespace is inferred.
  
                                      Note that when a namespace different than the local namespace is specified,
                                      a ReferenceGrant object is required in the referent namespace to allow that
                                      namespace's owner to accept the reference. See the ReferenceGrant
                                      documentation for details.
  
                                      Support: Core
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                    type: string
                                  port:
                                    description: |-
                                      Port specifies the destination port number to use for this resource.
                                      Port is required when the referent is a Kubernetes Service. In this
                                      case, the port number is the service port number, not the target port.
                                      For other resources, destination port might be derived from the referent
                                      resource or this field.
                                    format: int32
                                    maximum: 65535
                                    minimum: 1
                                    type: integer
                                required:
                                - name
                                type: object
                                x-kubernetes-validations:
                                - message: Must have port for Service reference
                                  rule: '(size(self.group) == 0 && self.kind == ''Service'')
                                    ? has(self.port) : true'
                              backendRefs:
                                description: |-
                                  BackendRefs references a Kubernetes object that represents the
                                  backend server to which the authorization request will be sent.
                                  Only Service kind is supported for now.
                                items:
                                  description: BackendRef defines how an ObjectReference
                                    that is specific to BackendRef.
                                  properties:
                                    group:
                                      default: ""
                                      description: |-
                                        Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                        When unspecified or empty string, core API group is inferred.
                                      maxLength: 253
                                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    kind:
                                      default: Service
                                      description: |-
                                        Kind is the Kubernetes resource kind of the referent. For example
                                        "Service".
  
                                        Defaults to "Service" when not specified.
  
                                        ExternalName services can refer to CNAME DNS records that may live
                                        outside of the cluster and as such are difficult to reason about in
                                        terms of conformance. They also may not be safe to forward to (see
                                        CVE-2021-25740 for more information). Implementations SHOULD NOT
                                        support ExternalName Services.
  
                                        Support: Core (Services with a type other than ExternalName)
  
                                        Support: Implementation-specific (Services with type ExternalName)
                                      maxLength: 63
                                      minLength: 1
                                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                      type: string
                                    name:
                                      description: Name is the name of the referent.
                                      maxLength: 253
                                      minLength: 1
                                      type: string
                                    namespace:
                                      description: |-
                                        Namespace is the namespace of the backend. When unspecified, the local
                                        namespace is inferred.
  
                                        Note that when a namespace different than the local namespace is specified,
                                        a ReferenceGrant object is required in the referent namespace to allow that
                                        namespace's owner to accept the reference. See the ReferenceGrant
                                        documentation for details.
  
                                        Support: Core
                                      maxLength: 63
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                      type: string
                                    port:
                                      description: |-
                                        Port specifies the destination port number to use for this resource.
                                        Port is required when the referent is a Kubernetes Service. In this
                                        case, the port number is the service port number, not the target port.
                                        For other resources, destination port might be derived from the referent
                                        resource or this field.
                                      format: int32
                                      maximum: 65535
                                      minimum: 1
                                      type: integer
                                  required:
                                  - name
                                  type: object
                                  x-kubernetes-validations:
                                  - message: Must have port for Service reference
                                    rule: '(size(self.group) == 0 && self.kind == ''Service'')
                                      ? has(self.port) : true'
                                maxItems: 1
                                type: array
                                x-kubernetes-validations:
                                - message: only support Service kind.
                                  rule: self.all(f, f.kind == 'Service')
                                - message: BackendRefs only supports Core group.
                                  rule: self.all(f, f.group == '')
                            type: object
                            x-kubernetes-validations:
                            - message: backendRef or backendRefs needs to be set
                              rule: has(self.backendRef) || self.backendRefs.size()
                                > 0
                          headersToExtAuth:
                            description: |-
                              HeadersToExtAuth defines the client request headers that will be included
                              in the request to the external authorization service.
                              Note: If not specified, the default behavior for gRPC and HTTP external
                              authorization services is different due to backward compatibility reasons.
                              All headers will be included in the check request to a gRPC authorization server.
                              Only the following headers will be included in the check request to an HTTP
                              authorization server: Host, Method, Path, Content-Length, and Authorization.
                              And these headers will always be included to the check request to an HTTP
                              authorization server by default, no matter whether they are specified
                              in HeadersToExtAuth or not.
                            items:
                              type: string
                            type: array
                          http:
                            description: |-
                              HTTP defines the HTTP External Authorization service.
                              Either GRPCService or HTTPService must be specified,
                              and only one of them can be provided.
                            properties:
                              backendRef:
                                description: |-
                                  BackendRef references a Kubernetes object that represents the
                                  backend server to which the authorization request will be sent.
                                  Only Service kind is supported for now.
  
                                  Deprecated: Use BackendRefs instead.
                                properties:
                                  group:
                                    default: ""
                                    description: |-
                                      Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                      When unspecified or empty string, core API group is inferred.
                                    maxLength: 253
                                    pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                    type: string
                                  kind:
                                    default: Service
                                    description: |-
                                      Kind is the Kubernetes resource kind of the referent. For example
                                      "Service".
  
                                      Defaults to "Service" when not specified.
  
                                      ExternalName services can refer to CNAME DNS records that may live
                                      outside of the cluster and as such are difficult to reason about in
                                      terms of conformance. They also may not be safe to forward to (see
                                      CVE-2021-25740 for more information). Implementations SHOULD NOT
                                      support ExternalName Services.
  
                                      Support: Core (Services with a type other than ExternalName)
  
                                      Support: Implementation-specific (Services with type ExternalName)
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                    type: string
                                  name:
                                    description: Name is the name of the referent.
                                    maxLength: 253
                                    minLength: 1
                                    type: string
                                  namespace:
                                    description: |-
                                      Namespace is the namespace of the backend. When unspecified, the local
                                      namespace is inferred.
  
                                      Note that when a namespace different than the local namespace is specified,
                                      a ReferenceGrant object is required in the referent namespace to allow that
                                      namespace's owner to accept the reference. See the ReferenceGrant
                                      documentation for details.
  
                                      Support: Core
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                    type: string
                                  port:
                                    description: |-
                                      Port specifies the destination port number to use for this resource.
                                      Port is required when the referent is a Kubernetes Service. In this
                                      case, the port number is the service port number, not the target port.
                                      For other resources, destination port might be derived from the referent
                                      resource or this field.
                                    format: int32
                                    maximum: 65535
                                    minimum: 1
                                    type: integer
                                required:
                                - name
                                type: object
                                x-kubernetes-validations:
                                - message: Must have port for Service reference
                                  rule: '(size(self.group) == 0 && self.kind == ''Service'')
                                    ? has(self.port) : true'
                              backendRefs:
                                description: |-
                                  BackendRefs references a Kubernetes object that represents the
                                  backend server to which the authorization request will be sent.
                                  Only Service kind is supported for now.
                                items:
                                  description: BackendRef defines how an ObjectReference
                                    that is specific to BackendRef.
                                  properties:
                                    group:
                                      default: ""
                                      description: |-
                                        Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                        When unspecified or empty string, core API group is inferred.
                                      maxLength: 253
                                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    kind:
                                      default: Service
                                      description: |-
                                        Kind is the Kubernetes resource kind of the referent. For example
                                        "Service".
  
                                        Defaults to "Service" when not specified.
  
                                        ExternalName services can refer to CNAME DNS records that may live
                                        outside of the cluster and as such are difficult to reason about in
                                        terms of conformance. They also may not be safe to forward to (see
                                        CVE-2021-25740 for more information). Implementations SHOULD NOT
                                        support ExternalName Services.
  
                                        Support: Core (Services with a type other than ExternalName)
  
                                        Support: Implementation-specific (Services with type ExternalName)
                                      maxLength: 63
                                      minLength: 1
                                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                      type: string
                                    name:
                                      description: Name is the name of the referent.
                                      maxLength: 253
                                      minLength: 1
                                      type: string
                                    namespace:
                                      description: |-
                                        Namespace is the namespace of the backend. When unspecified, the local
                                        namespace is inferred.
  
                                        Note that when a namespace different than the local namespace is specified,
                                        a ReferenceGrant object is required in the referent namespace to allow that
                                        namespace's owner to accept the reference. See the ReferenceGrant
                                        documentation for details.
  
                                        Support: Core
                                      maxLength: 63
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                      type: string
                                    port:
                                      description: |-
                                        Port specifies the destination port number to use for this resource.
                                        Port is required when the referent is a Kubernetes Service. In this
                                        case, the port number is the service port number, not the target port.
                                        For other resources, destination port might be derived from the referent
                                        resource or this field.
                                      format: int32
                                      maximum: 65535
                                      minimum: 1
                                      type: integer
                                  required:
                                  - name
                                  type: object
                                  x-kubernetes-validations:
                                  - message: Must have port for Service reference
                                    rule: '(size(self.group) == 0 && self.kind == ''Service'')
                                      ? has(self.port) : true'
                                maxItems: 1
                                type: array
                                x-kubernetes-validations:
                                - message: only support Service kind.
                                  rule: self.all(f, f.kind == 'Service')
                                - message: BackendRefs only supports Core group.
                                  rule: self.all(f, f.group == '')
                              headersToBackend:
                                description: |-
                                  HeadersToBackend are the authorization response headers that will be added
                                  to the original client request before sending it to the backend server.
                                  Note that coexisting headers will be overridden.
                                  If not specified, no authorization response headers will be added to the
                                  original client request.
                                items:
                                  type: string
                                type: array
                              path:
                                description: |-
                                  Path is the path of the HTTP External Authorization service.
                                  If path is specified, the authorization request will be sent to that path,
                                  or else the authorization request will be sent to the root path.
                                type: string
                            type: object
                            x-kubernetes-validations:
                            - message: backendRef or backendRefs needs to be set
                              rule: has(self.backendRef) || self.backendRefs.size()
                                > 0
                        type: object
                        x-kubernetes-validations:
                        - message: one of grpc or http must be specified
                          rule: (has(self.grpc) || has(self.http))
                        - message: only one of grpc or http can be specified
                          rule: (has(self.grpc) && !has(self.http)) || (!has(self.grpc)
                            && has(self.http))
                        - message: group is invalid, only the core API group (specified
                            by omitting the group field or setting it to an empty string)
                            is supported
                          rule: 'has(self.grpc) ? (!has(self.grpc.backendRef) || !has(self.grpc.backendRef.group)
                            || self.grpc.backendRef.group == "") : true'
                        - message: kind is invalid, only Service (specified by omitting
                            the kind field or setting it to 'Service') is supported
                          rule: 'has(self.grpc) ? (!has(self.grpc.backendRef) || !has(self.grpc.backendRef.kind)
                            || self.grpc.backendRef.kind == ''Service'') : true'
                        - message: group is invalid, only the core API group (specified
                            by omitting the group field or setting it to an empty string)
                            is supported
                          rule: 'has(self.http) ? (!has(self.http.backendRef) || !has(self.http.backendRef.group)
                            || self.http.backendRef.group == "") : true'
                        - message: kind is invalid, only Service (specified by omitting
                            the kind field or setting it to 'Service') is supported
                          rule: 'has(self.http) ? (!has(self.http.backendRef) || !has(self.http.backendRef.kind)
                            || self.http.backendRef.kind == ''Service'') : true'
                      jwt:
                        description: JWT defines the configuration for JSON Web Token
                          (JWT) authentication.
                        properties:
                          optional:
                            description: |-
                              Optional determines whether a missing JWT is acceptable, defaulting to false if not specified.
                              Note: Even if optional is set to true, JWT authentication will still fail if an invalid JWT is presented.
                            type: boolean
                          providers:
                            description: |-
                              Providers defines the JSON Web Token (JWT) authentication provider type.
                              When multiple JWT providers are specified, the JWT is considered valid if
                              any of the providers successfully validate the JWT. For additional details,
                              see https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_filters/jwt_authn_filter.html.
                            items:
                              description: JWTProvider defines how a JSON Web Token
                                (JWT) can be verified.
                              properties:
                                audiences:
                                  description: |-
                                    Audiences is a list of JWT audiences allowed access. For additional details, see
                                    https://tools.ietf.org/html/rfc7519#section-4.1.3. If not provided, JWT audiences
                                    are not checked.
                                  items:
                                    type: string
                                  maxItems: 8
                                  type: array
                                claimToHeaders:
                                  description: |-
                                    ClaimToHeaders is a list of JWT claims that must be extracted into HTTP request headers
                                    For examples, following config:
                                    The claim must be of type; string, int, double, bool. Array type claims are not supported
                                  items:
                                    description: ClaimToHeader defines a configuration
                                      to convert JWT claims into HTTP headers
                                    properties:
                                      claim:
                                        description: |-
                                          Claim is the JWT Claim that should be saved into the header : it can be a nested claim of type
                                          (eg. "claim.nested.key", "sub"). The nested claim name must use dot "."
                                          to separate the JSON name path.
                                        type: string
                                      header:
                                        description: Header defines the name of the
                                          HTTP request header that the JWT Claim will
                                          be saved into.
                                        type: string
                                    required:
                                    - claim
                                    - header
                                    type: object
                                  type: array
                                extractFrom:
                                  description: |-
                                    ExtractFrom defines different ways to extract the JWT token from HTTP request.
                                    If empty, it defaults to extract JWT token from the Authorization HTTP request header using Bearer schema
                                    or access_token from query parameters.
                                  properties:
                                    cookies:
                                      description: Cookies represents a list of cookie
                                        names to extract the JWT token from.
                                      items:
                                        type: string
                                      type: array
                                    headers:
                                      description: Headers represents a list of HTTP
                                        request headers to extract the JWT token from.
                                      items:
                                        description: JWTHeaderExtractor defines an HTTP
                                          header location to extract JWT token
                                        properties:
                                          name:
                                            description: Name is the HTTP header name
                                              to retrieve the token
                                            type: string
                                          valuePrefix:
                                            description: |-
                                              ValuePrefix is the prefix that should be stripped before extracting the token.
                                              The format would be used by Envoy like "{ValuePrefix}<TOKEN>".
                                              For example, "Authorization: Bearer <TOKEN>", then the ValuePrefix="Bearer " with a space at the end.
                                            type: string
                                        required:
                                        - name
                                        type: object
                                      type: array
                                    params:
                                      description: Params represents a list of query
                                        parameters to extract the JWT token from.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                issuer:
                                  description: |-
                                    Issuer is the principal that issued the JWT and takes the form of a URL or email address.
                                    For additional details, see https://tools.ietf.org/html/rfc7519#section-4.1.1 for
                                    URL format and https://rfc-editor.org/rfc/rfc5322.html for email format. If not provided,
                                    the JWT issuer is not checked.
                                  maxLength: 253
                                  type: string
                                name:
                                  description: |-
                                    Name defines a unique name for the JWT provider. A name can have a variety of forms,
                                    including RFC1123 subdomains, RFC 1123 labels, or RFC 1035 labels.
                                  maxLength: 253
                                  minLength: 1
                                  type: string
                                recomputeRoute:
                                  description: |-
                                    RecomputeRoute clears the route cache and recalculates the routing decision.
                                    This field must be enabled if the headers generated from the claim are used for
                                    route matching decisions. If the recomputation selects a new route, features targeting
                                    the new matched route will be applied.
                                  type: boolean
                                remoteJWKS:
                                  description: |-
                                    RemoteJWKS defines how to fetch and cache JSON Web Key Sets (JWKS) from a remote
                                    HTTP/HTTPS endpoint.
                                  properties:
                                    uri:
                                      description: |-
                                        URI is the HTTPS URI to fetch the JWKS. Envoy's system trust bundle is used to
                                        validate the server certificate.
                                      maxLength: 253
                                      minLength: 1
                                      type: string
                                  required:
                                  - uri
                                  type: object
                              required:
                              - name
                              - remoteJWKS
                              type: object
                              x-kubernetes-validations:
                              - message: claimToHeaders must be specified if recomputeRoute
                                  is enabled
                                rule: '(has(self.recomputeRoute) && self.recomputeRoute)
                                  ? size(self.claimToHeaders) > 0 : true'
                            maxItems: 4
                            minItems: 1
                            type: array
                        required:
                        - providers
                        type: object
                      oidc:
                        description: OIDC defines the configuration for the OpenID Connect
                          (OIDC) authentication.
                        properties:
                          clientID:
                            description: |-
                              The client ID to be used in the OIDC
                              [Authentication Request](https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest).
                            minLength: 1
                            type: string
                          clientSecret:
                            description: |-
                              The Kubernetes secret which contains the OIDC client secret to be used in the
                              [Authentication Request](https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest).
  
                              This is an Opaque secret. The client secret should be stored in the key
                              "client-secret".
                            properties:
                              group:
                                default: ""
                                description: |-
                                  Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                  When unspecified or empty string, core API group is inferred.
                                maxLength: 253
                                pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                              kind:
                                default: Secret
                                description: Kind is kind of the referent. For example
                                  "Secret".
                                maxLength: 63
                                minLength: 1
                                pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                type: string
                              name:
                                description: Name is the name of the referent.
                                maxLength: 253
                                minLength: 1
                                type: string
                              namespace:
                                description: |-
                                  Namespace is the namespace of the referenced object. When unspecified, the local
                                  namespace is inferred.
  
                                  Note that when a namespace different than the local namespace is specified,
                                  a ReferenceGrant object is required in the referent namespace to allow that
                                  namespace's owner to accept the reference. See the ReferenceGrant
                                  documentation for details.
  
                                  Support: Core
                                maxLength: 63
                                minLength: 1
                                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                type: string
                            required:
                            - name
                            type: object
                          cookieNames:
                            description: |-
                              The optional cookie name overrides to be used for Bearer and IdToken cookies in the
                              [Authentication Request](https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest).
                              If not specified, uses a randomly generated suffix
                            properties:
                              accessToken:
                                description: |-
                                  The name of the cookie used to store the AccessToken in the
                                  [Authentication Request](https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest).
                                  If not specified, defaults to "AccessToken-(randomly generated uid)"
                                type: string
                              idToken:
                                description: |-
                                  The name of the cookie used to store the IdToken in the
                                  [Authentication Request](https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest).
                                  If not specified, defaults to "IdToken-(randomly generated uid)"
                                type: string
                            type: object
                          defaultRefreshTokenTTL:
                            description: |-
                              DefaultRefreshTokenTTL is the default lifetime of the refresh token.
                              This field is only used when the exp (expiration time) claim is omitted in
                              the refresh token or the refresh token is not JWT.
  
                              If not specified, defaults to 604800s (one week).
                              Note: this field is only applicable when the "refreshToken" field is set to true.
                            type: string
                          defaultTokenTTL:
                            description: |-
                              DefaultTokenTTL is the default lifetime of the id token and access token.
                              Please note that Envoy will always use the expiry time from the response
                              of the authorization server if it is provided. This field is only used when
                              the expiry time is not provided by the authorization.
  
                              If not specified, defaults to 0. In this case, the "expires_in" field in
                              the authorization response must be set by the authorization server, or the
                              OAuth flow will fail.
                            type: string
                          forwardAccessToken:
                            description: |-
                              ForwardAccessToken indicates whether the Envoy should forward the access token
                              via the Authorization header Bearer scheme to the upstream.
                              If not specified, defaults to false.
                            type: boolean
                          logoutPath:
                            description: |-
                              The path to log a user out, clearing their credential cookies.
  
                              If not specified, uses a default logout path "/logout"
                            type: string
                          provider:
                            description: The OIDC Provider configuration.
                            properties:
                              authorizationEndpoint:
                                description: |-
                                  The OIDC Provider's [authorization endpoint](https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint).
                                  If not provided, EG will try to discover it from the provider's [Well-Known Configuration Endpoint](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderConfigurationResponse).
                                type: string
                              issuer:
                                description: |-
                                  The OIDC Provider's [issuer identifier](https://openid.net/specs/openid-connect-discovery-1_0.html#IssuerDiscovery).
                                  Issuer MUST be a URI RFC 3986 [RFC3986] with a scheme component that MUST
                                  be https, a host component, and optionally, port and path components and
                                  no query or fragment components.
                                minLength: 1
                                type: string
                              tokenEndpoint:
                                description: |-
                                  The OIDC Provider's [token endpoint](https://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint).
                                  If not provided, EG will try to discover it from the provider's [Well-Known Configuration Endpoint](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderConfigurationResponse).
                                type: string
                            required:
                            - issuer
                            type: object
                          redirectURL:
                            description: |-
                              The redirect URL to be used in the OIDC
                              [Authentication Request](https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest).
                              If not specified, uses the default redirect URI "%REQ(x-forwarded-proto)%://%REQ(:authority)%/oauth2/callback"
                            type: string
                          refreshToken:
                            description: |-
                              RefreshToken indicates whether the Envoy should automatically refresh the
                              id token and access token when they expire.
                              When set to true, the Envoy will use the refresh token to get a new id token
                              and access token when they expire.
  
                              If not specified, defaults to false.
                            type: boolean
                          resources:
                            description: |-
                              The OIDC resources to be used in the
                              [Authentication Request](https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest).
                            items:
                              type: string
                            type: array
                          scopes:
                            description: |-
                              The OIDC scopes to be used in the
                              [Authentication Request](https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest).
                              The "openid" scope is always added to the list of scopes if not already
                              specified.
                            items:
                              type: string
                            type: array
                        required:
                        - clientID
                        - clientSecret
                        - provider
                        type: object
                    type: object
                required:
                - authType
                type: object
              baseDomain:
                description: |-
                  The domain name to use either as a suffix in the case of Type=domain or as a prefix/domain in the case of Type=path.
                  When the type is domain, the controller will try to publish the Kode resource as a subdomain of the given domain (e.g <kode-resource>.kode.example.com).
                  When the type is path, the controller will try to publish the Kode resource as a path of the given BaseDomain (e.g kode.example.com/<kode-resource>).
                pattern: ^([a-zA-Z0-9_]+\.)*[a-zA-Z0-9_]+$
                type: string
              gatewaySpec:
                description: GatewaySpec defines the GatewaySpec for the EntryPoint.
                  Only one of GatewaySpec or IngressSpec can be set.
                properties:
                  certificateRefs:
                    description: Reference to Secrets containing the certificate and
                      private key to use for the Gateway HTTPS Listener.
                    items:
                      description: |-
                        SecretObjectReference identifies an API object including its namespace,
                        defaulting to Secret.
  
                        The API object must be valid in the cluster; the Group and Kind must
                        be registered in the cluster for this reference to be valid.
  
                        References to objects with invalid Group and Kind are not valid, and must
                        be rejected by the implementation, with appropriate Conditions set
                        on the containing object.
                      properties:
                        group:
                          default: ""
                          description: |-
                            Group is the group of the referent. For example, "gateway.networking.k8s.io".
                            When unspecified or empty string, core API group is inferred.
                          maxLength: 253
                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                        kind:
                          default: Secret
                          description: Kind is kind of the referent. For example "Secret".
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                          type: string
                        name:
                          description: Name is the name of the referent.
                          maxLength: 253
                          minLength: 1
                          type: string
                        namespace:
                          description: |-
                            Namespace is the namespace of the referenced object. When unspecified, the local
                            namespace is inferred.
  
                            Note that when a namespace different than the local namespace is specified,
                            a ReferenceGrant object is required in the referent namespace to allow that
                            namespace's owner to accept the reference. See the ReferenceGrant
                            documentation for details.
  
                            Support: Core
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                  envoyPatchPolicySpec:
                    description: Defines the custom patch policy for the Envoy Proxy
                      config generated by Envoy Gateway. For experienced users.
                    properties:
                      jsonPatches:
                        description: JSONPatch defines the JSONPatch configuration.
                        items:
                          description: |-
                            EnvoyJSONPatchConfig defines the configuration for patching a Envoy xDS Resource
                            using JSONPatch semantic
                          properties:
                            name:
                              description: Name is the name of the resource
                              type: string
                            operation:
                              description: Patch defines the JSON Patch Operation
                              properties:
                                from:
                                  description: |-
                                    From is the source location of the value to be copied or moved. Only valid
                                    for move or copy operations
                                    Refer to https://datatracker.ietf.org/doc/html/rfc6901 for more details.
                                  type: string
                                op:
                                  description: Op is the type of operation to perform
                                  enum:
                                  - add
                                  - remove
                                  - replace
                                  - move
                                  - copy
                                  - test
                                  type: string
                                path:
                                  description: |-
                                    Path is the location of the target document/field where the operation will be performed
                                    Refer to https://datatracker.ietf.org/doc/html/rfc6901 for more details.
                                  type: string
                                value:
                                  description: |-
                                    Value is the new value of the path location. The value is only used by
                                    the `add` and `replace` operations.
                                  x-kubernetes-preserve-unknown-fields: true
                              required:
                              - op
                              - path
                              type: object
                            type:
                              description: Type is the typed URL of the Envoy xDS Resource
                              enum:
                              - type.googleapis.com/envoy.config.listener.v3.Listener
                              - type.googleapis.com/envoy.config.route.v3.RouteConfiguration
                              - type.googleapis.com/envoy.config.cluster.v3.Cluster
                              - type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment
                              - type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.Secret
                              type: string
                          required:
                          - name
                          - operation
                          - type
                          type: object
                        type: array
                      priority:
                        description: |-
                          Priority of the EnvoyPatchPolicy.
                          If multiple EnvoyPatchPolicies are applied to the same
                          TargetRef, they will be applied in the ascending order of
                          the priority i.e. int32.min has the highest priority and
                          int32.max has the lowest priority.
                          Defaults to 0.
                        format: int32
                        type: integer
                      targetRef:
                        description: |-
                          TargetRef is the name of the Gateway API resource this policy
                          is being attached to.
                          By default, attaching to Gateway is supported and
                          when mergeGateways is enabled it should attach to GatewayClass.
                          This Policy and the TargetRef MUST be in the same namespace
                          for this Policy to have effect and be applied to the Gateway
                          TargetRef
                        properties:
                          group:
                            description: Group is the group of the target resource.
                            maxLength: 253
                            pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                            type: string
                          kind:
                            description: Kind is kind of the target resource.
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                            type: string
                          name:
                            description: Name is the name of the target resource.
                            maxLength: 253
                            minLength: 1
                            type: string
                        required:
                        - group
                        - kind
                        - name
                        type: object
                      type:
                        description: |-
                          Type decides the type of patch.
                          Valid EnvoyPatchType values are "JSONPatch".
                        enum:
                        - JSONPatch
                        type: string
                    required:
                    - targetRef
                    - type
                    type: object
                  existingGatewayRef:
                    description: Reference to an existing Gateway to use for the EntryPoint.
                      Setting this will override everything else in GatewaySpec.
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      kind:
                        description: Kind is the resource kind.
                        maxLength: 63
                        minLength: 1
                        pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                        type: string
                      name:
                        description: Name is the name of the resource.
                        maxLength: 253
                        minLength: 1
                        type: string
                      namespace:
                        description: Namespace is the namespace of the resource.
                        maxLength: 63
                        minLength: 1
                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                        type: string
                    required:
                    - kind
                    - name
                    type: object
                  gatewayClassName:
                    description: The name of the GatewayClass to use for the Gateway.
                    maxLength: 253
                    minLength: 1
                    type: string
                  securityPolicySpec:
                    description: 'Defines the SecurityPolicies to be applied to the
                      Gateway. Reference: https://gateway.envoyproxy.io/contributions/design/security-policy/'
                    properties:
                      basicAuth:
                        description: |-
                          BasicAuth defines the configuration for the HTTP Basic Authentication. Points to a Kubernetes secret which contains the username-password pairs in htpasswd format.
                          Reference to https://httpd.apache.org/docs/2.4/programs/htpasswd.html for more details.
                        properties:
                          users:
                            description: |-
                              The Kubernetes secret which contains the username-password pairs in
                              htpasswd format, used to verify user credentials in the "Authorization"
                              header.
  
                              This is an Opaque secret. The username-password pairs should be stored in
                              the key ".htpasswd". As the key name indicates, the value needs to be the
                              htpasswd format, for example: "user1:{SHA}hashed_user1_password".
                              Right now, only SHA hash algorithm is supported.
                              Reference to https://httpd.apache.org/docs/2.4/programs/htpasswd.html
                              for more details.
  
                              Note: The secret must be in the same namespace as the SecurityPolicy.
                            properties:
                              group:
                                default: ""
                                description: |-
                                  Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                  When unspecified or empty string, core API group is inferred.
                                maxLength: 253
                                pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                              kind:
                                default: Secret
                                description: Kind is kind of the referent. For example
                                  "Secret".
                                maxLength: 63
                                minLength: 1
                                pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                type: string
                              name:
                                description: Name is the name of the referent.
                                maxLength: 253
                                minLength: 1
                                type: string
                              namespace:
                                description: |-
                                  Namespace is the namespace of the referenced object. When unspecified, the local
                                  namespace is inferred.
  
                                  Note that when a namespace different than the local namespace is specified,
                                  a ReferenceGrant object is required in the referent namespace to allow that
                                  namespace's owner to accept the reference. See the ReferenceGrant
                                  documentation for details.
  
                                  Support: Core
                                maxLength: 63
                                minLength: 1
                                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                type: string
                            required:
                            - name
                            type: object
                        required:
                        - users
                        type: object
                      extAuth:
                        description: ExtAuth defines the configuration for External
                          Authorization.
                        properties:
                          failOpen:
                            default: false
                            description: |-
                              FailOpen is a switch used to control the behavior when a response from the External Authorization service cannot be obtained.
                              If FailOpen is set to true, the system allows the traffic to pass through.
                              Otherwise, if it is set to false or not set (defaulting to false),
                              the system blocks the traffic and returns a HTTP 5xx error, reflecting a fail-closed approach.
                              This setting determines whether to prioritize accessibility over strict security in case of authorization service failure.
                            type: boolean
                          grpc:
                            description: |-
                              GRPC defines the gRPC External Authorization service.
                              Either GRPCService or HTTPService must be specified,
                              and only one of them can be provided.
                            properties:
                              backendRef:
                                description: |-
                                  BackendRef references a Kubernetes object that represents the
                                  backend server to which the authorization request will be sent.
                                  Only Service kind is supported for now.
  
                                  Deprecated: Use BackendRefs instead.
                                properties:
                                  group:
                                    default: ""
                                    description: |-
                                      Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                      When unspecified or empty string, core API group is inferred.
                                    maxLength: 253
                                    pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                    type: string
                                  kind:
                                    default: Service
                                    description: |-
                                      Kind is the Kubernetes resource kind of the referent. For example
                                      "Service".
  
                                      Defaults to "Service" when not specified.
  
                                      ExternalName services can refer to CNAME DNS records that may live
                                      outside of the cluster and as such are difficult to reason about in
                                      terms of conformance. They also may not be safe to forward to (see
                                      CVE-2021-25740 for more information). Implementations SHOULD NOT
                                      support ExternalName Services.
  
                                      Support: Core (Services with a type other than ExternalName)
  
                                      Support: Implementation-specific (Services with type ExternalName)
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                    type: string
                                  name:
                                    description: Name is the name of the referent.
                                    maxLength: 253
                                    minLength: 1
                                    type: string
                                  namespace:
                                    description: |-
                                      Namespace is the namespace of the backend. When unspecified, the local
                                      namespace is inferred.
  
                                      Note that when a namespace different than the local namespace is specified,
                                      a ReferenceGrant object is required in the referent namespace to allow that
                                      namespace's owner to accept the reference. See the ReferenceGrant
                                      documentation for details.
  
                                      Support: Core
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                    type: string
                                  port:
                                    description: |-
                                      Port specifies the destination port number to use for this resource.
                                      Port is required when the referent is a Kubernetes Service. In this
                                      case, the port number is the service port number, not the target port.
                                      For other resources, destination port might be derived from the referent
                                      resource or this field.
                                    format: int32
                                    maximum: 65535
                                    minimum: 1
                                    type: integer
                                required:
                                - name
                                type: object
                                x-kubernetes-validations:
                                - message: Must have port for Service reference
                                  rule: '(size(self.group) == 0 && self.kind == ''Service'')
                                    ? has(self.port) : true'
                              backendRefs:
                                description: |-
                                  BackendRefs references a Kubernetes object that represents the
                                  backend server to which the authorization request will be sent.
                                  Only Service kind is supported for now.
                                items:
                                  description: BackendRef defines how an ObjectReference
                                    that is specific to BackendRef.
                                  properties:
                                    group:
                                      default: ""
                                      description: |-
                                        Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                        When unspecified or empty string, core API group is inferred.
                                      maxLength: 253
                                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    kind:
                                      default: Service
                                      description: |-
                                        Kind is the Kubernetes resource kind of the referent. For example
                                        "Service".
  
                                        Defaults to "Service" when not specified.
  
                                        ExternalName services can refer to CNAME DNS records that may live
                                        outside of the cluster and as such are difficult to reason about in
                                        terms of conformance. They also may not be safe to forward to (see
                                        CVE-2021-25740 for more information). Implementations SHOULD NOT
                                        support ExternalName Services.
  
                                        Support: Core (Services with a type other than ExternalName)
  
                                        Support: Implementation-specific (Services with type ExternalName)
                                      maxLength: 63
                                      minLength: 1
                                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                      type: string
                                    name:
                                      description: Name is the name of the referent.
                                      maxLength: 253
                                      minLength: 1
                                      type: string
                                    namespace:
                                      description: |-
                                        Namespace is the namespace of the backend. When unspecified, the local
                                        namespace is inferred.
  
                                        Note that when a namespace different than the local namespace is specified,
                                        a ReferenceGrant object is required in the referent namespace to allow that
                                        namespace's owner to accept the reference. See the ReferenceGrant
                                        documentation for details.
  
                                        Support: Core
                                      maxLength: 63
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                      type: string
                                    port:
                                      description: |-
                                        Port specifies the destination port number to use for this resource.
                                        Port is required when the referent is a Kubernetes Service. In this
                                        case, the port number is the service port number, not the target port.
                                        For other resources, destination port might be derived from the referent
                                        resource or this field.
                                      format: int32
                                      maximum: 65535
                                      minimum: 1
                                      type: integer
                                  required:
                                  - name
                                  type: object
                                  x-kubernetes-validations:
                                  - message: Must have port for Service reference
                                    rule: '(size(self.group) == 0 && self.kind == ''Service'')
                                      ? has(self.port) : true'
                                maxItems: 1
                                type: array
                                x-kubernetes-validations:
                                - message: only support Service kind.
                                  rule: self.all(f, f.kind == 'Service')
                                - message: BackendRefs only supports Core group.
                                  rule: self.all(f, f.group == '')
                            type: object
                            x-kubernetes-validations:
                            - message: backendRef or backendRefs needs to be set
                              rule: has(self.backendRef) || self.backendRefs.size()
                                > 0
                          headersToExtAuth:
                            description: |-
                              HeadersToExtAuth defines the client request headers that will be included
                              in the request to the external authorization service.
                              Note: If not specified, the default behavior for gRPC and HTTP external
                              authorization services is different due to backward compatibility reasons.
                              All headers will be included in the check request to a gRPC authorization server.
                              Only the following headers will be included in the check request to an HTTP
                              authorization server: Host, Method, Path, Content-Length, and Authorization.
                              And these headers will always be included to the check request to an HTTP
                              authorization server by default, no matter whether they are specified
                              in HeadersToExtAuth or not.
                            items:
                              type: string
                            type: array
                          http:
                            description: |-
                              HTTP defines the HTTP External Authorization service.
                              Either GRPCService or HTTPService must be specified,
                              and only one of them can be provided.
                            properties:
                              backendRef:
                                description: |-
                                  BackendRef references a Kubernetes object that represents the
                                  backend server to which the authorization request will be sent.
                                  Only Service kind is supported for now.
  
                                  Deprecated: Use BackendRefs instead.
                                properties:
                                  group:
                                    default: ""
                                    description: |-
                                      Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                      When unspecified or empty string, core API group is inferred.
                                    maxLength: 253
                                    pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                    type: string
                                  kind:
                                    default: Service
                                    description: |-
                                      Kind is the Kubernetes resource kind of the referent. For example
                                      "Service".
  
                                      Defaults to "Service" when not specified.
  
                                      ExternalName services can refer to CNAME DNS records that may live
                                      outside of the cluster and as such are difficult to reason about in
                                      terms of conformance. They also may not be safe to forward to (see
                                      CVE-2021-25740 for more information). Implementations SHOULD NOT
                                      support ExternalName Services.
  
                                      Support: Core (Services with a type other than ExternalName)
  
                                      Support: Implementation-specific (Services with type ExternalName)
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                    type: string
                                  name:
                                    description: Name is the name of the referent.
                                    maxLength: 253
                                    minLength: 1
                                    type: string
                                  namespace:
                                    description: |-
                                      Namespace is the namespace of the backend. When unspecified, the local
                                      namespace is inferred.
  
                                      Note that when a namespace different than the local namespace is specified,
                                      a ReferenceGrant object is required in the referent namespace to allow that
                                      namespace's owner to accept the reference. See the ReferenceGrant
                                      documentation for details.
  
                                      Support: Core
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                    type: string
                                  port:
                                    description: |-
                                      Port specifies the destination port number to use for this resource.
                                      Port is required when the referent is a Kubernetes Service. In this
                                      case, the port number is the service port number, not the target port.
                                      For other resources, destination port might be derived from the referent
                                      resource or this field.
                                    format: int32
                                    maximum: 65535
                                    minimum: 1
                                    type: integer
                                required:
                                - name
                                type: object
                                x-kubernetes-validations:
                                - message: Must have port for Service reference
                                  rule: '(size(self.group) == 0 && self.kind == ''Service'')
                                    ? has(self.port) : true'
                              backendRefs:
                                description: |-
                                  BackendRefs references a Kubernetes object that represents the
                                  backend server to which the authorization request will be sent.
                                  Only Service kind is supported for now.
                                items:
                                  description: BackendRef defines how an ObjectReference
                                    that is specific to BackendRef.
                                  properties:
                                    group:
                                      default: ""
                                      description: |-
                                        Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                        When unspecified or empty string, core API group is inferred.
                                      maxLength: 253
                                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    kind:
                                      default: Service
                                      description: |-
                                        Kind is the Kubernetes resource kind of the referent. For example
                                        "Service".
  
                                        Defaults to "Service" when not specified.
  
                                        ExternalName services can refer to CNAME DNS records that may live
                                        outside of the cluster and as such are difficult to reason about in
                                        terms of conformance. They also may not be safe to forward to (see
                                        CVE-2021-25740 for more information). Implementations SHOULD NOT
                                        support ExternalName Services.
  
                                        Support: Core (Services with a type other than ExternalName)
  
                                        Support: Implementation-specific (Services with type ExternalName)
                                      maxLength: 63
                                      minLength: 1
                                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                      type: string
                                    name:
                                      description: Name is the name of the referent.
                                      maxLength: 253
                                      minLength: 1
                                      type: string
                                    namespace:
                                      description: |-
                                        Namespace is the namespace of the backend. When unspecified, the local
                                        namespace is inferred.
  
                                        Note that when a namespace different than the local namespace is specified,
                                        a ReferenceGrant object is required in the referent namespace to allow that
                                        namespace's owner to accept the reference. See the ReferenceGrant
                                        documentation for details.
  
                                        Support: Core
                                      maxLength: 63
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                      type: string
                                    port:
                                      description: |-
                                        Port specifies the destination port number to use for this resource.
                                        Port is required when the referent is a Kubernetes Service. In this
                                        case, the port number is the service port number, not the target port.
                                        For other resources, destination port might be derived from the referent
                                        resource or this field.
                                      format: int32
                                      maximum: 65535
                                      minimum: 1
                                      type: integer
                                  required:
                                  - name
                                  type: object
                                  x-kubernetes-validations:
                                  - message: Must have port for Service reference
                                    rule: '(size(self.group) == 0 && self.kind == ''Service'')
                                      ? has(self.port) : true'
                                maxItems: 1
                                type: array
                                x-kubernetes-validations:
                                - message: only support Service kind.
                                  rule: self.all(f, f.kind == 'Service')
                                - message: BackendRefs only supports Core group.
                                  rule: self.all(f, f.group == '')
                              headersToBackend:
                                description: |-
                                  HeadersToBackend are the authorization response headers that will be added
                                  to the original client request before sending it to the backend server.
                                  Note that coexisting headers will be overridden.
                                  If not specified, no authorization response headers will be added to the
                                  original client request.
                                items:
                                  type: string
                                type: array
                              path:
                                description: |-
                                  Path is the path of the HTTP External Authorization service.
                                  If path is specified, the authorization request will be sent to that path,
                                  or else the authorization request will be sent to the root path.
                                type: string
                            type: object
                            x-kubernetes-validations:
                            - message: backendRef or backendRefs needs to be set
                              rule: has(self.backendRef) || self.backendRefs.size()
                                > 0
                        type: object
                        x-kubernetes-validations:
                        - message: one of grpc or http must be specified
                          rule: (has(self.grpc) || has(self.http))
                        - message: only one of grpc or http can be specified
                          rule: (has(self.grpc) && !has(self.http)) || (!has(self.grpc)
                            && has(self.http))
                        - message: group is invalid, only the core API group (specified
                            by omitting the group field or setting it to an empty string)
                            is supported
                          rule: 'has(self.grpc) ? (!has(self.grpc.backendRef) || !has(self.grpc.backendRef.group)
                            || self.grpc.backendRef.group == "") : true'
                        - message: kind is invalid, only Service (specified by omitting
                            the kind field or setting it to 'Service') is supported
                          rule: 'has(self.grpc) ? (!has(self.grpc.backendRef) || !has(self.grpc.backendRef.kind)
                            || self.grpc.backendRef.kind == ''Service'') : true'
                        - message: group is invalid, only the core API group (specified
                            by omitting the group field or setting it to an empty string)
                            is supported
                          rule: 'has(self.http) ? (!has(self.http.backendRef) || !has(self.http.backendRef.group)
                            || self.http.backendRef.group == "") : true'
                        - message: kind is invalid, only Service (specified by omitting
                            the kind field or setting it to 'Service') is supported
                          rule: 'has(self.http) ? (!has(self.http.backendRef) || !has(self.http.backendRef.kind)
                            || self.http.backendRef.kind == ''Service'') : true'
                      jwt:
                        description: JWT defines the configuration for JSON Web Token
                          (JWT) authentication.
                        properties:
                          optional:
                            description: |-
                              Optional determines whether a missing JWT is acceptable, defaulting to false if not specified.
                              Note: Even if optional is set to true, JWT authentication will still fail if an invalid JWT is presented.
                            type: boolean
                          providers:
                            description: |-
                              Providers defines the JSON Web Token (JWT) authentication provider type.
                              When multiple JWT providers are specified, the JWT is considered valid if
                              any of the providers successfully validate the JWT. For additional details,
                              see https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_filters/jwt_authn_filter.html.
                            items:
                              description: JWTProvider defines how a JSON Web Token
                                (JWT) can be verified.
                              properties:
                                audiences:
                                  description: |-
                                    Audiences is a list of JWT audiences allowed access. For additional details, see
                                    https://tools.ietf.org/html/rfc7519#section-4.1.3. If not provided, JWT audiences
                                    are not checked.
                                  items:
                                    type: string
                                  maxItems: 8
                                  type: array
                                claimToHeaders:
                                  description: |-
                                    ClaimToHeaders is a list of JWT claims that must be extracted into HTTP request headers
                                    For examples, following config:
                                    The claim must be of type; string, int, double, bool. Array type claims are not supported
                                  items:
                                    description: ClaimToHeader defines a configuration
                                      to convert JWT claims into HTTP headers
                                    properties:
                                      claim:
                                        description: |-
                                          Claim is the JWT Claim that should be saved into the header : it can be a nested claim of type
                                          (eg. "claim.nested.key", "sub"). The nested claim name must use dot "."
                                          to separate the JSON name path.
                                        type: string
                                      header:
                                        description: Header defines the name of the
                                          HTTP request header that the JWT Claim will
                                          be saved into.
                                        type: string
                                    required:
                                    - claim
                                    - header
                                    type: object
                                  type: array
                                extractFrom:
                                  description: |-
                                    ExtractFrom defines different ways to extract the JWT token from HTTP request.
                                    If empty, it defaults to extract JWT token from the Authorization HTTP request header using Bearer schema
                                    or access_token from query parameters.
                                  properties:
                                    cookies:
                                      description: Cookies represents a list of cookie
                                        names to extract the JWT token from.
                                      items:
                                        type: string
                                      type: array
                                    headers:
                                      description: Headers represents a list of HTTP
                                        request headers to extract the JWT token from.
                                      items:
                                        description: JWTHeaderExtractor defines an HTTP
                                          header location to extract JWT token
                                        properties:
                                          name:
                                            description: Name is the HTTP header name
                                              to retrieve the token
                                            type: string
                                          valuePrefix:
                                            description: |-
                                              ValuePrefix is the prefix that should be stripped before extracting the token.
                                              The format would be used by Envoy like "{ValuePrefix}<TOKEN>".
                                              For example, "Authorization: Bearer <TOKEN>", then the ValuePrefix="Bearer " with a space at the end.
                                            type: string
                                        required:
                                        - name
                                        type: object
                                      type: array
                                    params:
                                      description: Params represents a list of query
                                        parameters to extract the JWT token from.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                issuer:
                                  description: |-
                                    Issuer is the principal that issued the JWT and takes the form of a URL or email address.
                                    For additional details, see https://tools.ietf.org/html/rfc7519#section-4.1.1 for
                                    URL format and https://rfc-editor.org/rfc/rfc5322.html for email format. If not provided,
                                    the JWT issuer is not checked.
                                  maxLength: 253
                                  type: string
                                name:
                                  description: |-
                                    Name defines a unique name for the JWT provider. A name can have a variety of forms,
                                    including RFC1123 subdomains, RFC 1123 labels, or RFC 1035 labels.
                                  maxLength: 253
                                  minLength: 1
                                  type: string
                                recomputeRoute:
                                  description: |-
                                    RecomputeRoute clears the route cache and recalculates the routing decision.
                                    This field must be enabled if the headers generated from the claim are used for
                                    route matching decisions. If the recomputation selects a new route, features targeting
                                    the new matched route will be applied.
                                  type: boolean
                                remoteJWKS:
                                  description: |-
                                    RemoteJWKS defines how to fetch and cache JSON Web Key Sets (JWKS) from a remote
                                    HTTP/HTTPS endpoint.
                                  properties:
                                    uri:
                                      description: |-
                                        URI is the HTTPS URI to fetch the JWKS. Envoy's system trust bundle is used to
                                        validate the server certificate.
                                      maxLength: 253
                                      minLength: 1
                                      type: string
                                  required:
                                  - uri
                                  type: object
                              required:
                              - name
                              - remoteJWKS
                              type: object
                              x-kubernetes-validations:
                              - message: claimToHeaders must be specified if recomputeRoute
                                  is enabled
                                rule: '(has(self.recomputeRoute) && self.recomputeRoute)
                                  ? size(self.claimToHeaders) > 0 : true'
                            maxItems: 4
                            minItems: 1
                            type: array
                        required:
                        - providers
                        type: object
                      oidc:
                        description: OIDC defines the configuration for the OpenID Connect
                          (OIDC) authentication.
                        properties:
                          clientID:
                            description: |-
                              The client ID to be used in the OIDC
                              [Authentication Request](https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest).
                            minLength: 1
                            type: string
                          clientSecret:
                            description: |-
                              The Kubernetes secret which contains the OIDC client secret to be used in the
                              [Authentication Request](https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest).
  
                              This is an Opaque secret. The client secret should be stored in the key
                              "client-secret".
                            properties:
                              group:
                                default: ""
                                description: |-
                                  Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                  When unspecified or empty string, core API group is inferred.
                                maxLength: 253
                                pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                              kind:
                                default: Secret
                                description: Kind is kind of the referent. For example
                                  "Secret".
                                maxLength: 63
                                minLength: 1
                                pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                type: string
                              name:
                                description: Name is the name of the referent.
                                maxLength: 253
                                minLength: 1
                                type: string
                              namespace:
                                description: |-
                                  Namespace is the namespace of the referenced object. When unspecified, the local
                                  namespace is inferred.
  
                                  Note that when a namespace different than the local namespace is specified,
                                  a ReferenceGrant object is required in the referent namespace to allow that
                                  namespace's owner to accept the reference. See the ReferenceGrant
                                  documentation for details.
  
                                  Support: Core
                                maxLength: 63
                                minLength: 1
                                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                type: string
                            required:
                            - name
                            type: object
                          cookieNames:
                            description: |-
                              The optional cookie name overrides to be used for Bearer and IdToken cookies in the
                              [Authentication Request](https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest).
                              If not specified, uses a randomly generated suffix
                            properties:
                              accessToken:
                                description: |-
                                  The name of the cookie used to store the AccessToken in the
                                  [Authentication Request](https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest).
                                  If not specified, defaults to "AccessToken-(randomly generated uid)"
                                type: string
                              idToken:
                                description: |-
                                  The name of the cookie used to store the IdToken in the
                                  [Authentication Request](https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest).
                                  If not specified, defaults to "IdToken-(randomly generated uid)"
                                type: string
                            type: object
                          defaultRefreshTokenTTL:
                            description: |-
                              DefaultRefreshTokenTTL is the default lifetime of the refresh token.
                              This field is only used when the exp (expiration time) claim is omitted in
                              the refresh token or the refresh token is not JWT.
  
                              If not specified, defaults to 604800s (one week).
                              Note: this field is only applicable when the "refreshToken" field is set to true.
                            type: string
                          defaultTokenTTL:
                            description: |-
                              DefaultTokenTTL is the default lifetime of the id token and access token.
                              Please note that Envoy will always use the expiry time from the response
                              of the authorization server if it is provided. This field is only used when
                              the expiry time is not provided by the authorization.
  
                              If not specified, defaults to 0. In this case, the "expires_in" field in
                              the authorization response must be set by the authorization server, or the
                              OAuth flow will fail.
                            type: string
                          forwardAccessToken:
                            description: |-
                              ForwardAccessToken indicates whether the Envoy should forward the access token
                              via the Authorization header Bearer scheme to the upstream.
                              If not specified, defaults to false.
                            type: boolean
                          logoutPath:
                            description: |-
                              The path to log a user out, clearing their credential cookies.
  
                              If not specified, uses a default logout path "/logout"
                            type: string
                          provider:
                            description: The OIDC Provider configuration.
                            properties:
                              authorizationEndpoint:
                                description: |-
                                  The OIDC Provider's [authorization endpoint](https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint).
                                  If not provided, EG will try to discover it from the provider's [Well-Known Configuration Endpoint](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderConfigurationResponse).
                                type: string
                              issuer:
                                description: |-
                                  The OIDC Provider's [issuer identifier](https://openid.net/specs/openid-connect-discovery-1_0.html#IssuerDiscovery).
                                  Issuer MUST be a URI RFC 3986 [RFC3986] with a scheme component that MUST
                                  be https, a host component, and optionally, port and path components and
                                  no query or fragment components.
                                minLength: 1
                                type: string
                              tokenEndpoint:
                                description: |-
                                  The OIDC Provider's [token endpoint](https://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint).
                                  If not provided, EG will try to discover it from the provider's [Well-Known Configuration Endpoint](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderConfigurationResponse).
                                type: string
                            required:
                            - issuer
                            type: object
                          redirectURL:
                            description: |-
                              The redirect URL to be used in the OIDC
                              [Authentication Request](https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest).
                              If not specified, uses the default redirect URI "%REQ(x-forwarded-proto)%://%REQ(:authority)%/oauth2/callback"
                            type: string
                          refreshToken:
                            description: |-
                              RefreshToken indicates whether the Envoy should automatically refresh the
                              id token and access token when they expire.
                              When set to true, the Envoy will use the refresh token to get a new id token
                              and access token when they expire.
  
                              If not specified, defaults to false.
                            type: boolean
                          resources:
                            description: |-
                              The OIDC resources to be used in the
                              [Authentication Request](https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest).
                            items:
                              type: string
                            type: array
                          scopes:
                            description: |-
                              The OIDC scopes to be used in the
                              [Authentication Request](https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest).
                              The "openid" scope is always added to the list of scopes if not already
                              specified.
                            items:
                              type: string
                            type: array
                        required:
                        - clientID
                        - clientSecret
                        - provider
                        type: object
                    type: object
                type: object
              routingType:
                default: path
                description: |-
                  The way the Kode resource is accessed by the user. It could be subdomain or path.
                  Path means the Kode resource is accessed as a path of the BaseDomain (e.g kode.example.com/<kode-resource>).
                  Subdomain means the Kode resource is accessed as a subdomain of the BaseDomain (e.g <kode-resource>.kode.example.com).
                enum:
                - subdomain
                - path
                type: string
            required:
            - baseDomain
            - routingType
            type: object
          status:
            description: EntryPointStatus defines the observed state of EntryPoint
            properties:
              conditions:
                description: Conditions reflect the current state of the resource
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              lastError:
                description: Contains the last error message encountered during reconciliation.
                type: string
              lastErrorTime:
                description: The timestamp when the last error occurred.
                format: date-time
                type: string
              observedGeneration:
                description: ObservedGeneration is the last observed generation of the
                  resource.
                format: int64
                type: integer
              phase:
                description: Represents the current phase of the EntryPointPhase resource.
                type: string
            required:
            - phase
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []